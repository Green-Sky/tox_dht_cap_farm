name: MesureAndGenerate

on:
  workflow_dispatch
  #schedule:
  #  # every ~30min (every 30min starting min13, every hour, ...)
  #  - cron:  '13/30 * * * *'

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  mesure:
    timeout-minutes: 10

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: sudo apt update && sudo apt -y install git libsodium-dev cmake gnuplot

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/tool_src/build -DCMAKE_BUILD_TYPE=Release -S tool_src

    - name: Build
      run: cmake --build ${{github.workspace}}/tool_src/build --config Release -j 4 -t dht_tool

    - name: run
      run: ${{github.workspace}}/tool_src/build/bin/dht_tool ${{github.workspace}}/docs/data

    - name: plot_all
      run: |
        cd ${{github.workspace}}/plot
        cat ../docs/data/* > plot.csv
        gnuplot -e "set terminal pngcairo size 1600,900; set output \"allsimple.png\"" allsimple.gnuplot
        mv allsimple.png ../docs/img/

    - name: checkin
      run: |
        cd ${{github.workspace}}
        git add docs/data/
        git add docs/img/
        git status

    #- name: Determine tag name
    #  id: tag
    #  shell: bash
    #  # taken from llama.cpp
    #  run: |
    #    SHORT_HASH="$(git rev-parse --short=7 HEAD)"
    #    if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
    #      echo "name=dev-${SHORT_HASH}" >> $GITHUB_OUTPUT
    #    else
    #      SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
    #      echo "name=dev-${SAFE_NAME}-${SHORT_HASH}" >> $GITHUB_OUTPUT
    #    fi

  generate:
    if: ${{github.ref == 'refs/heads/master'}}

    runs-on: ubuntu-latest

    needs:
      - mesure

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    #- name: Determine tag name
    #  id: tag
    #  shell: bash
    #  # taken from llama.cpp
    #  run: |
    #    SHORT_HASH="$(git rev-parse --short=7 HEAD)"
    #    if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
    #      echo "name=dev-${SHORT_HASH}" >> $GITHUB_OUTPUT
    #    else
    #      SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
    #      echo "name=dev-${SAFE_NAME}-${SHORT_HASH}" >> $GITHUB_OUTPUT
    #    fi

    #- name: Download artifacts
    #  id: download-artifact
    #  uses: actions/download-artifact@v4
    #  with:
    #    path: ./artifacts/

    #- name: Create release
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    tag: ${{ steps.tag.outputs.name }}
    #  shell: bash
    #  run: |
    #    gh release create "$tag" \
    #        --repo="$GITHUB_REPOSITORY" \
    #        --title="${tag#v}" \
    #        --notes="preview build of the latest commit" \
    #        --prerelease

    #- name: Upload artifacts
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    tag: ${{ steps.tag.outputs.name }}
    #  shell: bash
    #  run: |
    #    ls -laR ./artifacts
    #    gh release upload "$tag" ./artifacts/*/* \
    #        --repo="$GITHUB_REPOSITORY"

